@model Template.Model.ViewModels.ContactDetailsViewModel

@{
    ViewBag.Title = "Edit Contact Details";
    Layout = "~/Views/shared/_BootstrapLayout.basic.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="shopper-informations">
        <div class="row">            
            <div class="col-sm-6">
                <div class="shopper-info">
                    <p>Edit Contact Information</p>
                    <table>
                        <tr>
                            <td>@Html.LabelFor(model => model.emailAdress, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                            <td>
                                @Html.EditorFor(model => model.emailAdress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.emailAdress, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td width="130px">
                                @Html.LabelFor(m => m.contactNumber)
                            </td>
                            <td>
                                @Html.EditorFor(m => m.contactNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Number" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.contactNumber, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.Label("Lives in")
                            </td>
                            <td>
                                @Html.EditorFor(m => m.streetAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street Address" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.streetAddress, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                @Html.EditorFor(m => m.suburb, new { htmlAttributes = new { @class = "form-control", @placeholder = "Suburb" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.suburb, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                @Html.EditorFor(m => m.city, new { htmlAttributes = new { @class = "form-control", @placeholder = "City/Town" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.city, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                @Html.EditorFor(m => m.postalCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Postal Code" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.postalCode, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>@Html.Label("Postal")</td>
                            <td>
                                @Html.EditorFor(m => m.postalOffice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Postal Office" } })
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.postalOffice, "", new { @class = "text-danger" })
                                </div>
                            </td>                            
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                @Html.EditorFor(m => m.town, new { htmlAttributes = new { @class = "form-control", @placeholder = "City/Town" }})
                                <div class="validation">
                                    @Html.ValidationMessageFor(m => m.town, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                               @Html.EditorFor(m => m.boxpostalCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Postal Code" }})
                            <div class="validation">
                                @Html.ValidationMessageFor(m => m.boxpostalCode, "", new { @class = "text-danger" })
                            </div>
                            </td>
                        </tr>                       
                    </table>
                </div>
            </div>           
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.ActionLink("Cancel", "ContactDetails")
        </div>
        <div class="col-sm-4">
            <div class="alert-danger">@ViewBag.Feedback</div>
            <br />
            <br />
            <input type="submit" class="btn btn-default add-to-cart" value="Save Changes" />
        </div>
    </div>



}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
